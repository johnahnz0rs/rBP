{"version":3,"sources":["components/MyNavbar.js","components/Login.js","components/Home.js","components/SelectNumberOfDays.js","components/SchedulerItems.js","components/RandomActivityPicker.js","components/ActivityPicker.js","components/ContentArea.js","App.js","serviceWorker.js","index.js"],"names":["MyNavbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","Fragment","style","width","height","backgroundColor","color","paddingTop","display","className","React","Component","Login","loginReg","user","console","log","fetch","concat","backendURI","then","res","json","loggedInUser","catch","err","inputHandler","e","name","target","value","setState","defineProperty","email","password","fname","lname","linkedIn","facebook","instagram","twitter","googlePlus","chrome","amazon","bind","assertThisInitialized","padding","htmlFor","type","onChange","Home","id","today","logPT","tempLogPT","moment","format","_this2","onClick","data-toggle","data-target","area-expanded","aria-controls","tempLogFood","tempLogProjects","SelectNumberOfDays","count","i","push","key","defaultValue","map","num","SchedulerItems","textHandler","input","tempActivity","newActivity","activity","newActivities","selectHandler","addActivity","activities","splice","plusOneInputGroup","temp","index","length","item","placeholder","components_SelectNumberOfDays","RandomActivityPicker","chooseActivityForMe","allActivities","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","parseInt","return","randoIndex","Math","floor","random","randomActivity","border","borderRadius","minHeight","ActivityPicker","showPageHandler","page","showThisPage","tempActivities","addAnotherActivity","newCount","howManySchedulerItems","how","components_SchedulerItems","components_RandomActivityPicker","ContentArea","components_MyNavbar","Route","exact","path","render","components_ActivityPicker","components_Home","components_Login","App","BrowserRouter","components_ContentArea","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e505bcce.chunk.js","sourcesContent":["import React from 'react';\n\nclass MyNavbar extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n        // declare methods here\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n\n        const myNavbar = {width: '100%', height: '75px', backgroundColor: 'cornflowerblue', color: 'white', paddingTop: '20px', display: 'block'};\n\n        return(\n            <React.Fragment>\n\n                <div style={myNavbar}>\n                    <p className=\"text-center\">this is the navbar</p>\n                </div>\n\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MyNavbar;","import React from 'react';\n\nclass Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // user: this.props.user;\n            backendURI: 'http://localhost:5000',\n            email: '',\n            password: '',\n            fname: '',\n            lname: '',\n            linkedIn: '',\n            facebook: '',\n            instagram: '',\n            twitter: '',\n            googlePlus: '',\n            chrome: '',\n            amazon: '',\n\n        };\n        // declare methods here\n        this.loginReg = this.loginReg.bind(this);\n    }\n\n    componentDidMount() {\n\n    }\n\n    loginReg = (user) => {\n        console.log('*** this is loginReg() ***');\n        const postConfig = {\n\n        };\n        fetch(`${this.state.backendURI}/login`, postConfig)\n            .then(res =>res.json())\n            .then(user => {\n                this.props.loggedInUser(user);\n                console.log('*** Login.js sending \\'user\\' up to ContentArea thxkbye ***', user);\n            })\n            .catch(err => console.log(err));\n    };\n\n    inputHandler = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({[name]: value});\n    };\n\n\n    render() {\n\n        const myLogin = {\n            backgroundColor: 'gray',\n            width: '100%',\n            display: 'block',\n            padding: '50px'\n        };\n\n\n        return(\n            <React.Fragment>\n                <div className=\"my-login container-fluid\" style={myLogin}>\n                    <p className=\"\">MyLogin</p>\n\n                    <div>\n                        <label htmlFor=\"email\">Email</label>\n                        <input name=\"email\" type=\"email\" onChange={this.inputHandler}/>\n\n                        <label htmlFor=\"password\">Password</label>\n                        {/*<input name=\"password\" type=\"password\" onChange={this.inputHandler} />*/}\n                        <input name=\"password\" type=\"text\" onChange={this.inputHandler} />\n                    </div>\n\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Login;","import React from 'react';\nimport moment from 'moment';\n\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            today: '',\n            logPT: '',\n            tempLogPT: ''\n        };\n        // declare methods here;\n        this.inputHandler = this.inputHandler.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({today: moment().format('dddd, MMMM D, YYYY')});\n\n    }\n\n    inputHandler = (e) => {\n        this.setState({[e.target.id]: e.target.value});\n    };\n\n\n\n\n\n    render() {\n\n        return (\n\n            <React.Fragment>\n                <div className=\"div-home container-fluid\">\n                    <h3 className=\"text-center\">{this.state.today}</h3>\n                    <button className=\"btn btn-outline-primary\" onClick={() => {console.log('*** today ***', this.state.today, typeof this.state.today)}}>Print today</button>\n\n\n\n                    {/*HEALTH*/}\n                    {/*PT Log*/}\n                    <div className=\"log-pt form-group\">\n                        <input className=\"form-check-input\" type=\"checkbox\" value={this.state.tempLogPT} id=\"defaultCheck1\"/>\n                        <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">Did you log your PT today?</label>\n                        <button className=\"btn btn-outline-success\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapse-pt-details\" area-expanded=\"false\" aria-controls=\"collapse-pt-details\">Add details</button>\n                    </div>\n                    <div className=\"collapse\" id=\"collapse-pt-details\">\n                         <div className=\"card card-body\">\n                             <p>add details about PT</p>\n                         </div>\n                    </div>\n\n                    {/*Food Log*/}\n                    <div className=\"log-food form-group\">\n                        <input className=\"form-check-input\" type=\"checkbox\" value={this.state.tempLogFood} id=\"tempLogFood\"/>\n                        <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">Did you log your Food today?</label>\n                        <button className=\"btn btn-outline-success\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapse-food-details\" area-expanded=\"false\" aria-controls=\"collapse-food-details\">Add details</button>\n                    </div>\n                    <div className=\"collapse\" id=\"collapse-food-details\">\n                        <div className=\"card card-body\">\n                            <p>add details about Food</p>\n                        </div>\n                    </div>\n\n\n\n\n                    {/*WEALTH*/}\n                    {/*Projects Log*/}\n                    <div className=\"log-pt form-group\">\n                        <input className=\"form-check-input\" type=\"checkbox\" value={this.state.tempLogProjects} id=\"tempLogProjects\"/>\n                        <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">Did you work on any Projects today?</label>\n                        <button className=\"btn btn-outline-success\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapse-projects-details\" area-expanded=\"false\" aria-controls=\"collapse-projects-details\">Add details</button>\n                    </div>\n                    <div className=\"collapse\" id=\"collapse-projects-details\">\n                        <div className=\"card card-body\">\n                            <p>add details about the Projects you worked on today, sucka!</p>\n                        </div>\n                    </div>\n\n\n\n\n                </div>\n            </React.Fragment>\n\n        );\n\n    };\n\n}\n\nexport default Home;","import React from 'react';\n\nconst SelectNumberOfDays = (props) => {\n\n    const count = [];\n\n    for (let i = 1; i <= 20; i++) {\n        count.push(i);\n    }\n\n\n\n    return (\n        <React.Fragment>\n            <option key={0} defaultValue=\"\">--</option>\n            {count.map(num => {\n                return (\n                    <option key={num} value={num}>{num}</option>\n                );\n            })}\n\n\n        </React.Fragment>\n\n    );\n\n\n\n\n};\n\n\nexport default SelectNumberOfDays;","import React from 'react';\nimport SelectNumberOfDays from \"./SelectNumberOfDays\";\n\n\nclass SchedulerItems extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            activities: this.props.activities,\n            // howManySchedulerItems: this.props.howManySchedulerItems,\n            newActivity: [{\n                activity: null,\n                count: null,\n            }],\n        };\n        // declare methods here\n        this.textHandler = this.textHandler.bind(this);\n        this.selectHandler = this.selectHandler.bind(this);\n        this.addActivity = this.addActivity.bind(this);\n        this.plusOneInputGroup = this.plusOneInputGroup.bind(this);\n    }\n\n    componentDidMount() {\n        // let items = [];\n        // for (let i = 0; i < this.props.howManySchedulerItems; i++) {\n        //     const myObj = {\n        //         index: i,\n        //         activity: null,\n        //         count: null,\n        //     };\n        //     items.push(myObj);\n        // }\n        // this.setState({newActivities: items});\n    }\n\n    textHandler = (e) => {\n        const input = e.target.value;\n        let tempActivity = this.state.newActivity;\n        tempActivity[0].activity = input;\n        this.setState({newActivities: tempActivity});\n    };\n\n    selectHandler = (e) => {\n        const input = e.target.value;\n        const tempActivity = this.state.newActivity;\n        tempActivity[0].count = input;\n        this.setState({newActivities: tempActivity});\n    };\n\n    // @DESC takes target activity object and sends it to parent to be\n    // @DESC added to user's list of all activities\n    addActivity = (e) => {\n        let activities = this.state.newActivity;\n        const activity = activities[0];\n\n        // send it up to parent\n        if (activity.activity && activity.count) {\n            this.props.addActivity(activity);\n        }\n        console.log('*** SchedulerItems.addActivity(activity) ***', activity);\n\n        // add new activity\n        activities.push({activity: null, count: null});\n        // splice old activity\n        activities.splice(0,1);\n        // setState\n        this.setState({newActivity: activities});\n    };\n\n    // NOT IN USE\n    // @DESC adds another input-group\n    plusOneInputGroup = () => {\n        console.log('*** SchedulerItems.plusOneInputGroup() ***');\n        let temp = this.state.newActivities;\n        temp.push({\n            index: temp.length,\n            activity: '',\n            count: '',\n        });\n        this.setState({newActivities: temp});\n    };\n\n\n    render() {\n\n        // const count = [];\n\n        return (\n            <React.Fragment>\n\n                {/* show current activities here (from props.activities) */}\n                <table className=\"table table-borderless\">\n                    <thead>\n                        <tr>\n                            <th>activity</th>\n                            <th>how many days (x of total)</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.activities.map(item => {\n                            return(\n                                <tr className=\"\" key={item.index}>\n                                    <td>{item.activity}</td>\n                                    <td>{item.count}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n\n                {/* add new activities here */}\n\n                {this.state.newActivity.map(item => {\n\n                    return(\n                        <div className=\"input-group\">\n\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Add an activity\" onChange={this.textHandler} />\n\n                            <select className=\"custom-select\" onChange={this.selectHandler} >\n                                <SelectNumberOfDays />\n                            </select>\n\n                            <div className=\"input-group-append\" id=\"button-addon4\">\n                                <button className=\"btn btn-outline-success\" type=\"button\" onClick={this.addActivity}>Add Activity</button>\n                                {/*<button className=\"btn btn-outline-danger\" type=\"button\">Cancel</button>*/}\n                            </div>\n\n                        </div>\n                    );\n\n                })}\n\n\n\n                {/*<button className=\"btn btn-sm btn-outline-dark\" onClick={this.plusOneInputGroup}>add another activity</button>*/}\n\n\n            </React.Fragment>\n        );\n    }\n\n};\n\nexport default SchedulerItems;","import React from 'react';\n\nclass RandomActivityPicker extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            activities: this.props.activities,\n            randomActivity: null,\n        };\n        // declare methods here\n        this.chooseActivityForMe = this.chooseActivityForMe.bind(this);\n    }\n\n    componentDidMount() {\n        console.log('*** RandomActivityPicker.js ***');\n    }\n\n    // @DESC returns a randomActivity object from a weight list of user's weekly activities;\n    chooseActivityForMe = () => {\n        console.log(' RandomActivityPicker.chooseActivityForMe() ***');\n        let allActivities = [];\n        for (let i of this.state.activities) {\n            for (let a = 0; a < parseInt(i.count); i++) {\n                allActivities.push(i.activity);\n            }\n        }\n        const randoIndex = Math.floor(Math.random() * allActivities.length);\n        let randomActivity = this.state.activities[randoIndex];\n        this.setState({randomActivity: randomActivity});\n    };\n\n    render() {\n\n        const whatever = {border: '1px solid black', borderRadius: '8px', minHeight: '100px', padding: '10px'};\n\n        return(<React.Fragment>\n\n            <div className=\"mb-3 text-center\" style={whatever}>\n\n                {/*<p>lol this is the result of chooseActivityForMe()</p>*/}\n\n                <div className=\"\" style={{padding: '10px'}}>\n                    {this.state.activities.map(item => {\n                        return(\n                            <p key={item.index}>#{item.index +1} - {item.activity} x {item.count}</p>\n                        );\n                    })}\n                </div>\n\n\n                <div className=\"\" style={{}}>\n                    {this.state.randomActivity && <h3>{this.state.randomActivity.activity}</h3>}\n                </div>\n\n\n            </div>\n\n            <button className=\"btn btn-lg btn-primary\" onClick={this.chooseActivityForMe}>what should i do now?</button>\n\n\n        </React.Fragment>);\n    }\n\n}\n\nexport default RandomActivityPicker;","import React from 'react';\nimport moment from 'moment';\n\nimport SelectNumberOfDays from './SelectNumberOfDays';\nimport SchedulerItems from \"./SchedulerItems\";\nimport RandomActivityPicker from './RandomActivityPicker';\n\nclass ActivityPicker extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            howManySchedulerItems: 1,\n            activities: [\n                {index: 0, activity: 'yoga', count: '3'},\n                {index: 1, activity: 'hike', count: '2'},\n                {index: 2, activity: 'pushups', count: '5'},\n            ],\n            showThisPage: 'pageRAP',\n        };\n        // declare methods here\n        this.showPageHandler = this.showPageHandler.bind(this);\n        this.addActivity = this.addActivity.bind(this);\n        this.chooseActivityForMe = this.chooseActivityForMe.bind(this);\n        this.addAnotherActivity = this.addAnotherActivity.bind(this);\n    }\n\n    componentDidMount() {\n        // const testLol = [\n        //     {index: 0, activity: 'yoga', count: '3'},\n        //     {index: 1, activity: 'hike', count: '2'},\n        //     {index: 2, activity: 'pushups', count: '5'},\n        // ];\n        // this.setState({activities: testLol});\n\n    }\n\n    showPageHandler = (e) => {\n        const page = e.target.name;\n        // this.setState({showThisPage: page});\n        console.log('*** ActivityPicker.showPageHandler(page) ***', page);\n\n        // if (this.state[page]) {\n        //\n        // }\n        this.setState({showThisPage: page});\n\n\n\n    };\n\n    // @DESC adds an activity to the user's list of all activities\n    addActivity = (activity) => {\n        console.log('*** ActivityPicker.addActivity(activity) ***', activity);\n        let temp = activity;\n        let tempActivities = this.state.activities;\n\n        temp.index = tempActivities.length;\n        tempActivities.push(temp);\n\n        this.setState({activities: tempActivities});\n    };\n\n    chooseActivityForMe = () => {\n\n    };\n\n    // @DESC add another <SchedulerItems /> to the form\n    addAnotherActivity = () => {\n        console.log('*** ActivityPicker.addAnotherActivity() ***');\n        const newCount = this.state.howManySchedulerItems + 1;\n        this.setState({howManySchedulerItems: newCount});\n        console.log(`*** newCount: ${newCount}, this.state: ${this.state.how} ***`);\n    };\n\n    render() {\n\n        const randomActivityPicker = {\n            padding: '10px'\n        };\n\n        const today = moment().format('dddd, MMMM D, YYYY');\n\n\n        return(\n            <React.Fragment>\n                <div className=\"\" style={randomActivityPicker}>\n\n                    {/* header */}\n                    <h3 className=\"text-center\">Physical Activities</h3>\n                    <h5 className=\"text-center\">{today}</h5>\n\n                    {/* buttons: toggle add-activity & random-activity-picker */}\n                    <div className=\"activity-picker\">\n                        {/*<button className=\"btn btn-lg btn-primary\" style={{}} type=\"button\" data-toggle=\"collapse\" data-target=\"#add-activity-form\" aria-expanded=\"false\" aria-controls=\"add-activity-form\" >add activity</button>*/}\n                        {/*<button className=\"btn btn-lg btn-secondary\" style={{}} type=\"button\" data-toggle=\"collapse\" data-target=\"#random-activity-picker\" aria-expanded=\"false\" aria-controls=\"random-activity-picker\">choose activity for me</button>*/}\n                        <button name=\"pageAA\" className=\"btn btn-lg btn-primary mr-3\" style={{}} onClick={this.showPageHandler} >add activity</button>\n                        <button name=\"pageRAP\" className=\"btn btn-lg btn-secondary\" style={{}} onClick={this.showPageHandler} >choose activity for me</button>\n                    </div>\n\n\n                    {/* addActivity */}\n                    {this.state.showThisPage && this.state.showThisPage === 'pageAA' &&\n                    <div className=\"card card-body\">\n\n                        <SchedulerItems\n                            activities={this.state.activities}\n                            // howManySchedulerItems={this.state.howManySchedulerItems}\n                            addActivity={this.addActivity}\n                        />\n\n                    </div>}\n\n\n                    {/* RandomActivityPlanner */}\n                    {this.state.showThisPage && this.state.showThisPage === 'pageRAP' &&\n                    <div className=\"card card-body\">\n\n                        <RandomActivityPicker activities={this.state.activities}/>\n\n                    </div>}\n\n\n\n\n\n                </div>\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default ActivityPicker;","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport MyNavbar from './MyNavbar';\nimport Login from './Login';\nimport Home from './Home';\nimport ActivityPicker from './ActivityPicker';\nimport Test from './Test';\n\n\nclass ContentArea extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: this.props.user\n        };\n        // bind methods here\n        // this.onClick = this.onClick.bind(this);\n    }\n\n    loggedInUser(user) {\n\n    }\n\n    componentDidMount() {\n        // console.log('*** lol johnahnz0rs is l33t on port 3000 ***');\n    }\n\n    // onClick = (e) => {\n    //     this.setState({showThisTab: e.target.id});\n    // };\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"root-div\">\n                    <MyNavbar />\n                    {/*<Test />*/}\n\n                    <Route exact path=\"/\" render={() => <ActivityPicker /> } />\n                    <Route path=\"/home\" render={() => <Home user={this.state.user || {}} />} />\n                    <Route path=\"/login\" render={() =><Login loggedInUser={this.loggedInUser} />} />\n\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ContentArea;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport ContentArea from './components/ContentArea';\n\nclass App extends Component {\n  render() {\n    return (\n        <BrowserRouter>\n            <React.Fragment>\n                <ContentArea />\n            </React.Fragment>\n        </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}