{"version":3,"sources":["components/Login.js","components/Home.js","components/ContentArea.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","devLogin","console","log","setState","username","password","state","login","printState","inputHandler","e","name","target","value","defineProperty","loginUser","axios","post","then","res","err","user","data","loggedInUser","catch","register","newUser","response","history","push","fname","lname","email","linkedIn","facebook","instagram","twitter","googlePlus","chrome","amazon","bind","assertThisInitialized","get","merp","react_default","a","createElement","Fragment","className","style","htmlFor","type","onChange","onClick","React","Component","withRouter","Home","getTodaysBulletJournalEntry","userId","_id","todayDayOfYear","moment","format","year","concat","todayEntry","newEntry","dayOfYear","dayIsDone","admin","weekOfYear","dayOfWeekIndex","dayOfWeek","dayOfWeekFull","date","today","todayFull","health","section","inProgress","completed","wealth","social","todaysBulletJournalEntry","bulletJournalEntry","styleToDoButtons","group","toDoItem","bulletGroup","sectionIndex","findIndex","eachSection","yesYes","includes","updateTemplate","task","template","msg","updateASection","updateGroup","aSection","updateBulletJournalEntry","closeASection","updateBJEntry","returnSection","dayofYear","weekofYear","_this2","border","borderRadius","data-toggle","data-target","aria-expanded","aria-controls","id","ContentArea","components_Login","components_Home","App","BrowserRouter","components_ContentArea","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.21e091d0.chunk.js","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nclass Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // login\n            username: null,\n            password: null,\n            //\n            // register\n            fname: null,\n            lname: null,\n            email: null,\n            linkedIn: null,\n            facebook: null,\n            instagram: null,\n            twitter: null,\n            googlePlus: null,\n            chrome: null,\n            amazon: null,\n        };\n        // declare methods here\n        this.devLogin = this.devLogin.bind(this);\n        this.printState = this.printState.bind(this);\n        this.inputHandler = this.inputHandler.bind(this);\n        this.login = this.login.bind(this);\n        this.register = this.register.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get('/lol')\n            .then(merp => console.log('*** backend says wassup ***', merp))\n            .catch(err => console.log(err));\n\n    }\n\n    // DEVELOPMENT: auto-login johnahnz0rs\n    devLogin = () => {\n        console.log('*** u clicked devLogin() ***');\n\n        this.setState({username: 'johnahnz0rs'});\n        this.setState({password: 'password'});\n        if (this.state.username && this.state.password) { this.login(); }\n\n    };\n\n    printState = () => console.log(this.state);\n\n\n\n    inputHandler = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({[name]: value});\n    };\n\n\n    login = () => {\n        console.log('*** u clicked login() ***');\n\n        if (!this.state.username || !this.state.password) {\n            console.log('*** plz enter username AND password ***');\n        } else {\n            const loginUser = {\n                username: this.state.username,\n                password: this.state.password\n            };\n            axios.post('/api/login', loginUser)\n                .then(res => {\n                    if (!res.err) {\n                        const user = res.data;\n                        console.log('*** Login.js sending \\'user\\' up to ContentArea thxkbye ***', user);\n                        this.props.loggedInUser(user);\n                    }\n                })\n                .catch(err => console.log(err));\n        }\n\n\n\n    };\n\n    register = () => {\n        if (!this.state.username || !this.state.password) {\n            console.log('*** plz enter username and password ***');\n        } else {\n            const newUser = {\n                username: this.state.username,\n                password: this.state.password\n            };\n            axios.post('/api/register', newUser)\n                .then(response => {\n                    if (!response.err) {\n                        console.log('*** response from backend ***', response);\n                        this.props.history.push('/');\n                    }\n                })\n                .catch(err => console.log(err));\n        }\n    };\n\n\n\n    render() {\n\n\n        return(\n            <React.Fragment>\n                <div className=\"my-login container-fluid\" style={{}}>\n                    <h3 className=\"text-center\">Login</h3>\n\n                    <div className=\"form-group text-center\">\n                        <label htmlFor=\"username\">Username</label>\n                        <input name=\"username\" className=\"form-control\" type=\"email\" onChange={this.inputHandler}/>\n                    </div>\n\n                    <div className=\"form-group text-center\">\n                        <label htmlFor=\"password\">Password</label>\n                        {/*<input name=\"password\" type=\"password\" onChange={this.inputHandler} />*/}\n                        <input name=\"password\" className=\"form-control\" type=\"text\" onChange={this.inputHandler} />\n                    </div>\n\n                    <div className=\"text-center\">\n                        <button className=\"btn btn-lg btn-success m-3\" onClick={this.login}>Log In</button>\n                        <button className=\"btn btn-lg btn-primary m-3\" onClick={this.register}>Register</button>\n                        <button className=\"btn btn-lg btn-outline-danger m-3\" onClick={this.devLogin}>johnahnz0rs</button>\n                        <button className=\"btn btn-lg btn-outline-warning m-3\" onClick={this.printState}>printState</button>\n                    </div>\n\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(Login);","import React from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\n\nimport '../assets/HomeStyle.css';\n\n\n\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // logPT: null,\n            // tempLogPT: null,\n            user: this.props.user,\n            bulletJournalEntry: {\n                _id: null,\n                userId: null,\n                dayIsDone: null,\n                admin: {\n                    dayofYear: null,\n                    weekofYear: null,\n                    dayOfWeek: null,\n                    date: null,\n                    today: null,\n                    todayFull: null,\n                },\n                health: null,\n                wealth: null,\n                social: null,\n            },\n            // dateString: null, // for records and queries\n            // morningRoutineCompleted: [],\n            // healthCompleted: [],\n            template: [],\n        };\n        // declare methods here;\n        this.printState = this.printState.bind(this);\n        this.getTodaysBulletJournalEntry = this.getTodaysBulletJournalEntry.bind(this);\n        this.inputHandler = this.inputHandler.bind(this);\n        this.styleToDoButtons = this.styleToDoButtons.bind(this);\n        this.updateTemplate = this.updateTemplate.bind(this);\n        this.updateASection = this.updateASection.bind(this);\n        this.closeASection = this.closeASection.bind(this);\n        this.updateBulletJournalEntry = this.updateBulletJournalEntry.bind(this);\n    }\n\n    componentDidMount() {\n        console.log('*** Home.js received this from props *** ', this.props);\n\n        // check for today's bulletJournalEntry\n        this.getTodaysBulletJournalEntry();\n\n    }\n\n    printState = () => console.log(this.state);\n\n    getTodaysBulletJournalEntry = () => {\n\n        const userId = this.state.user._id;\n        const todayDayOfYear = moment().format('DDDD');\n        const year = moment().format('YYYY');\n\n        axios.get(`/api/bulletjournal/${userId}/${year}/${todayDayOfYear}`)\n            .then(response => {\n                const todayEntry = response.data;\n\n                if (todayEntry._id) { // if today's bulletJournalEntry exists, then setState\n                    console.log('*** got today\\'s entry ***', todayEntry);\n                    // code\n                    // this.setState({user: })\n                } else { // else no entry for today, then create one!\n                    const newEntry = {\n                        userId: this.state.user._id,\n                        year: moment().format('YYYY'),\n                        dayOfYear: moment().format('DDDD'),\n                        dayIsDone: false,\n                        admin: {\n                            dayOfYear: moment().format('DDDD'),\n                            weekOfYear: moment().format('WW'),\n                            dayOfWeekIndex: moment().format('d'),\n                            dayOfWeek: moment().format('ddd'),\n                            dayOfWeekFull: moment().format('dddd'),\n                            date: moment().format('YYYY_MM_DD'),\n                            today: moment().format('ddd, M/D/Y'),\n                            todayFull: moment().format('dddd, MMMM D, YYYY')\n                        },\n                        health: [\n                            { section: 'morningRoutine', inProgress: [], completed: [] },\n                            { section: 'ptLog', inProgress: [], completed: [] },\n                            { section: 'foodLog', inProgress: [], completed: [] },\n                        ],\n                        wealth: [\n                            { section: 'learn', inProgress: [], completed: [] },\n                            { section: 'income', inProgress: [], completed: [] },\n                            { section: 'bangOnYourCraft', inProgress: [], completed: [] },\n                            { section: 'sideHustle', inProgress: [], completed: [] },\n                        ],\n                        social: [ // aka love & happiness\n                            { section: 'eveningActivities', inProgress: [], completed: [] },\n                            { section: 'relationships', inProgress: [], completed: [] },\n                        ],\n                    };\n                    axios.post('/api/bulletjournal/new', newEntry)\n                        .then(response => {\n                            console.log('*** response from /api/bulletjournal/new', response.data);\n                            const todaysBulletJournalEntry = response.data;\n                            this.setState({bulletJournalEntry: todaysBulletJournalEntry});\n                        })\n                        .catch(err => console.log('*** ERROR ***', err));\n                }\n            })\n            .catch(err => console.log(err));\n    };\n\n    inputHandler = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({[name]: value});\n    };\n\n    styleToDoButtons = (group, section, toDoItem) => {\n\n        // if group exists in bJEntry\n        if (this.state.bulletJournalEntry[group]) {\n            // get index of section we're looking for\n\n            const yesYes = (eachSection) => {\n                return eachSection.section === section;\n            };\n\n            const bulletGroup = this.state.bulletJournalEntry[group];\n            const sectionIndex = bulletGroup.findIndex(eachSection => yesYes(eachSection));\n\n            // first, if item is completed, then return btn-success\n            if (bulletGroup[sectionIndex].completed.includes(toDoItem)) {\n                return 'btn btn-sm btn-success m-2 d-block my-3 mx-auto';\n\n            // else if item is inProgress, then return btn-secondary\n            } else if (bulletGroup[sectionIndex].inProgress.includes(toDoItem)) {\n                return 'btn btn-sm btn-secondary m-2 d-block my-3 mx-auto';\n\n            // else, then return btn-danger\n            } else {\n                return 'btn btn-sm btn-danger d-block my-3 mx-auto';\n            }\n        }\n\n        // if group does not exist in bjEntry, then return btn-danger\n        return 'btn btn-sm btn-danger d-block my-3 mx-auto';\n    };\n\n\n    // template\n    updateTemplate = (task) => {\n\n        let updateTemplate = this.state.template;\n        updateTemplate.push({msg: 'hello world'});\n        console.log('*** updateTemplate() ***', task, updateTemplate);\n    };\n\n\n\n    updateASection = (group, section, toDoItem) => {\n        const returnSection = (aSection) => {\n            return aSection === section;\n        };\n\n        if (this.state[group]) {\n            let updateGroup = this.state[group];\n            const sectionIndex = updateGroup.findIndex(returnSection);\n\n            if (!updateGroup[sectionIndex].inProgress.includes(toDoItem)) {\n                updateGroup[sectionIndex].inProgress.push(toDoItem);\n                this.setState({[group]: updateGroup}, this.updateBulletJournalEntry);\n            }\n        }\n    };\n\n    closeASection = (group, section, toDoItem) => {\n        console.log('*** closeASection() ***', group, section, toDoItem);\n\n        const returnSection = (aSection) => {\n            return aSection === section;\n        };\n\n        console.log(this.state[group]);\n\n        if (this.state.bulletJournalEntry[group]) {\n            let updateBJEntry = this.state.bulletJournalEntry;\n            let updateGroup = updateBJEntry[group];\n            const sectionIndex = updateGroup.findIndex(aSection => returnSection(aSection));\n            let updateSection = updateGroup[sectionIndex];\n            // console.log('*** section we\\'re updating ***', updateGroup[sectionIndex]);\n\n            if (!updateSection.completed.includes(toDoItem)) {\n                updateBJEntry[group][sectionIndex].completed.push(toDoItem);\n                this.setState({bulletJournalEntry: updateBJEntry}, this.updateBulletJournalEntry);\n            }\n        }\n\n    };\n\n\n    updateBulletJournalEntry = () => {\n        console.log('*** updateBulletJournalEntry() ***', this.state);\n    };\n\n\n\n\n    render() {\n\n        const today = moment().format('ddd, M/D/Y');\n\n\n\n\n\n\n        return (<React.Fragment>\n            <div className=\"container-fluid\">\n\n\n\n                <h3 className=\"text-right font-weight-bold mb-3\">{today}</h3>\n\n                {this.state.user && <h3 className=\"text-center mb-3\">Welcome, {this.state.user.username}.<br />Let's suck today's dick!</h3>}\n                <button className=\"btn btn-sm btn-outline-warning text-center mx-3\" onClick={this.printState}>printState</button>\n\n                {this.state.bulletJournalEntry && <p>yes, i got bulletJournalEntry in state.</p>}\n\n\n\n\n\n\n                {/*MORNING ROUTINE*/}\n                <div className=\"container text-center p-3 mb-3\" style={{border: '1px solid black', borderRadius: '8px'}}>\n                    <h3 className=\"font-weight-bold\">Morning Routine</h3>\n\n\n\n                    {/*multivitamin*/}\n                    <button\n                        className={this.styleToDoButtons('health', 'morningRoutine', 'multivitamin')}\n                        type=\"button\"\n                        data-toggle=\"collapse\"\n                        data-target=\"#morning-routine-multivitamin\"\n                        aria-expanded=\"false\"\n                        aria-controls=\"morning-routine-multivitamin\">\n                        Multivitamin\n                    </button>\n                    <div className=\"collapse\" id=\"morning-routine-multivitamin\">\n                        <div className=\"card card-body\">\n                            <button\n                                className={this.styleToDoButtons('health','morningRoutine', 'multivitamin')}\n                                onClick={() => this.closeASection('health', 'morningRoutine','multivitamin')}>\n                                Yes, I took my multivitamin today.\n                            </button>\n                        </div>\n                    </div>\n\n\n                    {/*agenda - plan/prepare for today*/}\n                    <button\n                        className={this.styleToDoButtons('health','morningRoutine', 'agenda')}\n                        type=\"button\"\n                        data-toggle=\"collapse\"\n                        data-target=\"#morning-routine-agenda\"\n                        aria-expanded=\"false\"\n                        aria-controls=\"morning-routine-agenda\">\n                        What's on today's agenda?\n                    </button>\n                    <div className=\"collapse\" id=\"morning-routine-agenda\">\n                        <div className=\"card card-body\">\n                            <h5 className=\"font-weight-bold\">Myself</h5>\n                            <p>Look at your evernote for today\n                                <br /> in the future, do api calls to evernote and display today's journal entry</p>\n\n                            {/*notes to myself re: agenda*/}\n                            <div>\n                            {/*<ul>*/}\n                            {/*<li>Research: Daily Affirmations, Guidelines for Living</li>*/}\n                            {/*<li>Prioritize: What are my responsibilities to myself today? Health, Wealth, Love, Happiness</li>*/}\n                            {/*</ul>*/}\n\n                            {/*<h5 className=\"font-weight-bold\">Others</h5>*/}\n                            {/*<ul>*/}\n                            {/*<li>Research: Do I have any appointments today? Meetings, phone calls, visits?</li>*/}\n                            {/*<li>ResearcH: What is my to-do list for the day?</li>*/}\n                            {/*<li>Prioritize: What projects / tasks are most important for me to accomplish today?</li>*/}\n                            {/*</ul>*/}\n\n                            {/*<h5 className=\"font-weight-bold\">Social / Fun</h5>*/}\n                            {/*<ul>*/}\n                            {/*<li>Research: What are my evening activitiy options? Exercise, Fun Activity, Friends?</li>*/}\n                            {/*<li>Prioritize: What do I want to do tonight after biz hours?</li>*/}\n                            {/*</ul>*/}\n                            </div>\n\n                            <button\n                                className={this.styleToDoButtons('health', 'morningRoutine', 'agenda')}\n                                type=\"button\"\n                                data-toggle=\"collapse\"\n                                data-target=\"#morning-routine-agenda\"\n                                aria-expanded=\"false\"\n                                aria-controls=\"morning-routine-agenda\"\n                                onClick={() => this.closeASection('health','morningRoutine','agenda')}>\n                                Yes, I know what's on my plate today.\n                            </button>\n                        </div>\n                    </div>\n\n\n                    {/*morning smr*/}\n                    <button\n                        className={this.styleToDoButtons('health','morningRoutine', 'morningSMR')}\n                        type=\"button\"\n                        data-toggle=\"collapse\"\n                        data-target=\"#morning-routine-smr\"\n                        aria-expanded=\"false\"\n                        aria-controls=\"morning-routine-smr\">\n                        Morning SMR\n                    </button>\n                    <div className=\"collapse\" id=\"morning-routine-smr\">\n                        <div className=\"card card-body\">\n                            <button\n                                className={this.styleToDoButtons('health','morningRoutine', 'morningSMR')}\n                                type=\"button\"\n                                data-toggle=\"collapse\"\n                                data-target=\"#morning-routine-smr\"\n                                aria-expanded=\"false\"\n                                aria-controls=\"morning-routine-smr\"\n                                onClick={() => this.closeASection('health', 'morningRoutine', 'morningSMR')}>\n                                Yes, I did my Morning SMR\n                            </button>\n                        </div>\n                    </div>\n\n                </div>\n                {/*end morningRoutine*/}\n\n\n\n\n\n\n\n\n                {/*HEALTH*/}\n                <div className=\"container text-center p-3 mb-3\" style={{border: '1px solid black', borderRadius: '8px',}}>\n                    <h3 className=\"font-weight-bold\">Health</h3>\n\n                    {/* ptLog */}\n                    <button\n                        className={this.styleToDoButtons('health','ptLog', 'ptLog')}\n                        type=\"button\"\n                        data-toggle=\"collapse\"\n                        data-target=\"#health-ptlog\"\n                        aria-expanded=\"false\"\n                        aria-controls=\"health-ptlog\">\n                        PT Log\n                    </button>\n                    <div className=\"collapse\" id=\"health-ptlog\">\n                        <div className=\"card card-body\">\n                            <p>add pt log stuff here</p>\n                            <ul>\n                                <li>click a button to show form to add new ptLog entry</li>\n                                <li>inside the add-new-ptLog-entry-form, add a button to add the entry</li>\n                                <li>adding the entry triggers a call to backend to update, upon whose response we update the state.</li>\n                            </ul>\n\n                            <button\n                                className={this.styleToDoButtons('health', 'ptLog', 'ptLog')}\n                                type=\"button\"\n                                data-toggle=\"collapse\"\n                                data-target=\"#health-ptlog\"\n                                aria-expanded=\"false\"\n                                aria-controls=\"health-ptlog\"\n                                onClick={() => this.closeASection('health', 'ptLog', 'ptLog')}>\n                                Finished with today's PT Log\n                            </button>\n                        </div>\n                    </div>\n\n\n\n                    {/* foodLog */}\n                    <button\n                        className={this.styleToDoButtons('health', 'foodLog', 'foodLog')}\n                        type=\"button\"\n                        data-toggle=\"collapse\"\n                        data-target=\"#health-foodlog\"\n                        aria-expanded=\"false\"\n                        aria-controls=\"health-foodlog\">\n                        Food Log\n                    </button>\n                    <div className=\"collapse\" id=\"health-foodlog\">\n                        <div className=\"card card-body\">\n                            <p>add food log stuff here</p>\n                            <ul>\n                                <li>click a button to show form to add new foodLog entry</li>\n                                <li>inside the add-new-foodLog-entry-form, add a button to add the entry</li>\n                                <li>adding the entry triggers a call to backend to update the entire user, upon whose response we update the state.</li>\n                            </ul>\n                            <button\n                                className={this.styleToDoButtons('health', 'foodLog', 'foodLog')}\n                                type=\"button\"\n                                data-toggle=\"collapse\"\n                                data-target=\"#health-foodlog\"\n                                aria-expanded=\"false\"\n                                aria-controls=\"health-foodlog\"\n                                onClick={() => this.closeASection('health', 'foodLog', 'foodLog')}>\n                                Finished with today's Food Log\n                            </button>\n                        </div>\n                    </div>\n\n\n                </div>\n                {/* end health */}\n\n\n\n\n\n\n\n\n\n\n\n                {/*wealth*/}\n                <div className=\"container text-center p-3 mb-3\" style={{border: '1px solid black', borderRadius: '8px'}}>\n                    <h3 className=\"font-weight-bold mb-0\">Wealth</h3>\n                    <h5>collect dem resources, boi!</h5>\n\n\n                    {/* learn */}\n                    <button className={this.styleToDoButtons('wealth', 'learn', 'learn')}\n                            type=\"button\"\n                            data-toggle=\"collapse\"\n                            data-target=\"#learn\"\n                            aria-expanded=\"false\"\n                            aria-controls=\"learn\">\n                        Learn\n                    </button>\n                    <div className=\"collapse\" id=\"learn\">\n                        <div className=\"card card-body\">\n                            <p>something or learning</p>\n                            <button\n                                className={this.styleToDoButtons('wealth', 'learn', 'learn')}\n                                type=\"button\"\n                                data-toggle=\"collapse\"\n                                data-target=\"#learn\"\n                                aria-expanded=\"false\"\n                                aria-controls=\"learn\"\n                                onClick={() => this.closeASection('wealth','learn', 'learn')}>\n                                Done with Learning for Today\n                            </button>\n                        </div>\n                    </div>\n\n\n\n                    {/* income */}\n                    <button className={this.styleToDoButtons('wealth', 'income', 'income')}\n                            type=\"button\"\n                            data-toggle=\"collapse\"\n                            data-target=\"#income\"\n                            aria-expanded=\"false\"\n                            aria-controls=\"income\">\n                        Income\n                    </button>\n                    <div className=\"collapse\" id=\"income\">\n                        <div className=\"card card-body\">\n                            <p>something about income</p>\n                            <button\n                                className={this.styleToDoButtons('wealth', 'income', 'income')}\n                                onClick={() => this.updateTemplate('income')}>\n                                Button\n                            </button>\n                        </div>\n                    </div>\n\n\n\n                    {/* bangOnYourCraft */}\n                    <button className={this.styleToDoButtons('wealth', 'bangOnYourCraft', '')}\n                            type=\"button\"\n                            data-toggle=\"collapse\"\n                            data-target=\"#bangOnYourCraft\"\n                            aria-expanded=\"false\"\n                            aria-controls=\"bangOnYourCraft\">\n                        Bang On Your Craft\n                    </button>\n                    <div className=\"collapse\" id=\"bangOnYourCraft\">\n                        <div className=\"card card-body\">\n                            <p>something about income</p>\n                            <button\n                                className={this.styleToDoButtons('wealth', 'bangOnYourCraft', '')}\n                                onClick={() => this.updateTemplate('bangOnYourCraft')}>\n                                Button\n                            </button>\n                        </div>\n                    </div>\n\n\n\n                    {/* sideHustle */}\n                    <button className={this.styleToDoButtons('wealth', 'sideHustle', '')}\n                            type=\"button\"\n                            data-toggle=\"collapse\"\n                            data-target=\"#sideHustle\"\n                            aria-expanded=\"false\"\n                            aria-controls=\"sideHustle\">\n                        Side Hustle\n                    </button>\n                    <div className=\"collapse\" id=\"sideHustle\">\n                        <div className=\"card card-body\">\n                            <p>something about income</p>\n                            <button\n                                className={this.styleToDoButtons('wealth', 'sideHustle', '')}\n                                onClick={() => this.updateTemplate('sideHustle')}>\n                                Button\n                            </button>\n                        </div>\n                    </div>\n\n                </div>\n                {/* end wealth */}\n\n\n\n\n\n\n\n\n\n\n\n\n                {/*social*/}\n                <div className=\"container text-center p-3 mb-3\" style={{border: '1px solid black', borderRadius: '8px'}}>\n                    <h3 className=\"font-weight-bold\">Social / Evening</h3>\n\n                    {/* eveningActivities */}\n                    <button className={this.styleToDoButtons('sectionName', 'eveningActivities')}\n                        type=\"button\"\n                        data-toggle=\"collapse\"\n                        data-target=\"#eveningActivities\"\n                        aria-expanded=\"false\"\n                        aria-controls=\"eveningActivities\">\n                        Evening Activities\n                    </button>\n                    <div className=\"collapse\" id=\"eveningActivities\">\n                        <div className=\"card card-body\">\n                            <p>something about eveningActivities</p>\n                            <button\n                                className={this.styleToDoButtons('sectionName', 'eveningActivities')}\n                                onClick={() => this.updateTemplate('eveningActivities')}>\n                                Button\n                            </button>\n                        </div>\n                    </div>\n\n\n                    {/* relationships */}\n                    <button className={this.styleToDoButtons('sectionName', 'relationships')}\n                            type=\"button\"\n                            data-toggle=\"collapse\"\n                            data-target=\"#relationships\"\n                            aria-expanded=\"false\"\n                            aria-controls=\"relationships\">\n                        Relationships\n                    </button>\n                    <div className=\"collapse\" id=\"relationships\">\n                        <div className=\"card card-body\">\n                            <p>something about eveningActivities</p>\n                            <button\n                                className={this.styleToDoButtons('sectionName', 'relationships')}\n                                onClick={() => this.updateTemplate('relationships')}>\n                                Button\n                            </button>\n                        </div>\n                    </div>\n\n\n                </div>\n                {/* end social */}\n\n\n\n\n\n\n                {/*/!*template*!/*/}\n                {/*<div className=\"container text-center p-3 mb-3\" style={{border: '1px solid black', borderRadius: '8px'}}>*/}\n                    {/*<h3 className=\"font-weight-bold\">Title</h3>*/}\n\n                    {/*<button className={this.styleToDoButtons('sectionName', 'template')}*/}\n                            {/*type=\"button\"*/}\n                            {/*data-toggle=\"collapse\"*/}\n                            {/*data-target=\"#template\"*/}\n                            {/*aria-expanded=\"false\"*/}\n                            {/*aria-controls=\"template\">*/}\n\n                    {/*</button>*/}\n\n\n                    {/*/!*TEMPLATE COLLAPSES*!/*/}\n                    {/*<div className=\"collapse\" id=\"template\">*/}\n                        {/*<div className=\"card card-body\">*/}\n                            {/*<p>something or other</p>*/}\n                            {/*<button*/}\n                                {/*className={this.styleToDoButtons('sectionName', 'template')}*/}\n                                {/*onClick={() => this.updateTemplate('template')}>*/}\n                                {/*Yes, I took my multivitamin today.*/}\n                            {/*</button>*/}\n                        {/*</div>*/}\n                    {/*</div>*/}\n\n\n                {/*</div>*/}\n\n\n\n\n\n\n\n\n            </div>\n\n\n        </React.Fragment>);\n\n    };\n\n}\n\nexport default Home;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport Login from './Login';\nimport Home from './Home';\n\n\n\nclass ContentArea extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: null,\n        };\n        // bind methods here\n        this.loggedInUser = this.loggedInUser.bind(this);\n    }\n\n    loggedInUser = (user) => {\n        console.log('*** received this loggedInUser ***', user);\n        this.setState({user: user});\n    };\n\n    componentDidMount() {\n\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"root-div\">\n\n                    {!this.state.user && <Login loggedInUser={this.loggedInUser} />}\n                    {this.state.user && <Home user={this.state.user} />}\n\n\n\n\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(ContentArea);\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport ContentArea from './components/ContentArea';\n\nclass App extends Component {\n  render() {\n    return (\n        <BrowserRouter>\n            <React.Fragment>\n                <ContentArea />\n            </React.Fragment>\n        </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}