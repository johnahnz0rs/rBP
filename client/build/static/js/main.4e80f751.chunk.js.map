{"version":3,"sources":["components/MyNavbar.js","components/Login.js","components/Home.js","components/Test.js","components/ContentArea.js","App.js","serviceWorker.js","index.js"],"names":["MyNavbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","Fragment","style","width","height","backgroundColor","color","paddingTop","display","className","React","Component","Login","loginReg","user","console","log","fetch","concat","backendURI","then","res","json","loggedInUser","catch","err","inputHandler","e","name","target","value","setState","defineProperty","email","password","fname","lname","linkedIn","facebook","instagram","twitter","googlePlus","chrome","amazon","bind","assertThisInitialized","padding","htmlFor","type","onChange","Home","id","today","logPT","tempLogPT","moment","format","_this2","onClick","data-toggle","data-target","area-expanded","aria-controls","tempLogFood","tempLogProjects","Test","textAlign","ContentArea","components_MyNavbar","components_Test","Route","exact","path","render","components_Login","components_Home","App","BrowserRouter","components_ContentArea","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4e80f751.chunk.js","sourcesContent":["import React from 'react';\n\nclass MyNavbar extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n        // declare methods here\n\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n\n        const myNavbar = {width: '100%', height: '75px', backgroundColor: 'cornflowerblue', color: 'white', paddingTop: '20px', display: 'block'};\n\n        return(\n            <React.Fragment>\n\n                <div style={myNavbar}>\n                    <p className=\"text-center\">this is the navbar</p>\n                </div>\n\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MyNavbar;","import React from 'react';\n\nclass Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // user: this.props.user;\n            backendURI: 'http://localhost:5000',\n            email: '',\n            password: '',\n            fname: '',\n            lname: '',\n            linkedIn: '',\n            facebook: '',\n            instagram: '',\n            twitter: '',\n            googlePlus: '',\n            chrome: '',\n            amazon: '',\n\n        };\n        // declare methods here\n        this.loginReg = this.loginReg.bind(this);\n    }\n\n    componentDidMount() {\n\n    }\n\n    loginReg = (user) => {\n        console.log('*** this is loginReg() ***');\n        const postConfig = {\n\n        };\n        fetch(`${this.state.backendURI}/login`, postConfig)\n            .then(res =>res.json())\n            .then(user => {\n                this.props.loggedInUser(user);\n                console.log('*** Login.js sending \\'user\\' up to ContentArea thxkbye ***', user);\n            })\n            .catch(err => console.log(err));\n    };\n\n    inputHandler = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({[name]: value});\n    };\n\n\n    render() {\n\n        const myLogin = {\n            backgroundColor: 'gray',\n            width: '100%',\n            display: 'block',\n            padding: '50px'\n        };\n\n\n        return(\n            <React.Fragment>\n                <div className=\"my-login container-fluid\" style={myLogin}>\n                    <p className=\"\">MyLogin</p>\n\n                    <div>\n                        <label htmlFor=\"email\">Email</label>\n                        <input name=\"email\" type=\"email\" onChange={this.inputHandler}/>\n\n                        <label htmlFor=\"password\">Password</label>\n                        {/*<input name=\"password\" type=\"password\" onChange={this.inputHandler} />*/}\n                        <input name=\"password\" type=\"text\" onChange={this.inputHandler} />\n                    </div>\n\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Login;","import React from 'react';\nimport moment from 'moment';\n\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            today: '',\n            logPT: '',\n            tempLogPT: ''\n        };\n        // declare methods here;\n        this.inputHandler = this.inputHandler.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({today: moment().format('dddd, MMMM D, YYYY')});\n\n    }\n\n    inputHandler = (e) => {\n        this.setState({[e.target.id]: e.target.value});\n    };\n\n\n\n\n\n    render() {\n\n        return (\n\n            <React.Fragment>\n                <div className=\"div-home container-fluid\">\n                    <h3 className=\"text-center\">{this.state.today}</h3>\n                    <button className=\"btn btn-outline-primary\" onClick={() => {console.log('*** today ***', this.state.today, typeof this.state.today)}}>Print today</button>\n\n\n\n                    {/*HEALTH*/}\n                    {/*PT Log*/}\n                    <div className=\"log-pt form-group\">\n                        <input className=\"form-check-input\" type=\"checkbox\" value={this.state.tempLogPT} id=\"defaultCheck1\"/>\n                        <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">Did you log your PT today?</label>\n                        <button className=\"btn btn-outline-success\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapse-pt-details\" area-expanded=\"false\" aria-controls=\"collapse-pt-details\">Add details</button>\n                    </div>\n                    <div className=\"collapse\" id=\"collapse-pt-details\">\n                         <div className=\"card card-body\">\n                             <p>add details about PT</p>\n                         </div>\n                    </div>\n\n                    {/*Food Log*/}\n                    <div className=\"log-food form-group\">\n                        <input className=\"form-check-input\" type=\"checkbox\" value={this.state.tempLogFood} id=\"tempLogFood\"/>\n                        <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">Did you log your Food today?</label>\n                        <button className=\"btn btn-outline-success\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapse-food-details\" area-expanded=\"false\" aria-controls=\"collapse-food-details\">Add details</button>\n                    </div>\n                    <div className=\"collapse\" id=\"collapse-food-details\">\n                        <div className=\"card card-body\">\n                            <p>add details about Food</p>\n                        </div>\n                    </div>\n\n\n\n\n                    {/*WEALTH*/}\n                    {/*Projects Log*/}\n                    <div className=\"log-pt form-group\">\n                        <input className=\"form-check-input\" type=\"checkbox\" value={this.state.tempLogProjects} id=\"tempLogProjects\"/>\n                        <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">Did you work on any Projects today?</label>\n                        <button className=\"btn btn-outline-success\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapse-projects-details\" area-expanded=\"false\" aria-controls=\"collapse-projects-details\">Add details</button>\n                    </div>\n                    <div className=\"collapse\" id=\"collapse-projects-details\">\n                        <div className=\"card card-body\">\n                            <p>add details about the Projects you worked on today, sucka!</p>\n                        </div>\n                    </div>\n\n\n\n\n                </div>\n            </React.Fragment>\n\n        );\n\n    };\n\n}\n\nexport default Home;","import React from 'react';\n\nconst Test = (props) => {\n\n    const testDiv = {\n        backgroundColor: 'pink',\n        color: 'white',\n        display: 'block',\n        textAlign: 'center',\n        padding: '10px'\n    };\n\n    return (\n\n        <React.Fragment>\n            <div style={testDiv}>\n                <p>lol this is test</p>\n            </div>\n\n\n        </React.Fragment>\n    );\n\n};\n\nexport default Test;","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport MyNavbar from './MyNavbar';\nimport Login from './Login';\nimport Home from './Home';\nimport Test from './Test';\n\n\nclass ContentArea extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: this.props.user\n        };\n        // bind methods here\n        // this.onClick = this.onClick.bind(this);\n    }\n\n    loggedInUser(user) {\n\n    }\n\n    componentDidMount() {\n        // console.log('*** lol johnahnz0rs is l33t on port 3000 ***');\n    }\n\n    // onClick = (e) => {\n    //     this.setState({showThisTab: e.target.id});\n    // };\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"root-div\">\n                    <MyNavbar />\n                    <Test />\n\n                    <Route exact path=\"/\" render={() => <Login loggedInUser={this.loggedInUser} />} />\n                    <Route path=\"/home\" render={() => <Home user={this.state.user || {}} />} />\n\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ContentArea;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport ContentArea from './components/ContentArea';\n\nclass App extends Component {\n  render() {\n    return (\n        <BrowserRouter>\n            <React.Fragment>\n                <ContentArea />\n            </React.Fragment>\n        </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}